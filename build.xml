<?xml version="1.0"?>
<project name="facebookauth"
         basedir="." description="Facebook Authentication plugins for Joomla"
         default="all">

    <property file="./build.properties" />

    <!-- Default properties, set only if not already assigned in the build.properties file -->
    <property name="dirs.root" value="${phing.dir}" />
    <property name="dirs.plugins" value="${dirs.root}/plugins" />
    <property name="dirs.modules" value="${dirs.root}/modules" />
    <property name="dirs.release" value="${dirs.root}/release" />
    <property name="version" value="dev" />

    <!--
    ====================================================================================================
    Tasks - General
    ====================================================================================================
    -->

    <target name="all" description="Makes everything"
            depends="new-release,setup-properties,build-pkg">
    </target>

    <target name="new-release" description="Create the release directory afresh">
        <delete dir="${dirs.release}" quiet="true" includeemptydirs="true" />
        <mkdir dir="${dirs.release}" />
    </target>

    <target name="setup-properties" description="Set up version and build properties">
        <!-- Initialize the build.date timestamp -->
        <tstamp>
            <format property="build.date" pattern="%Y-%m-%d" />
        </tstamp>

        <!-- Initialize the version from the Git commit hash if a version is not already set-->
        <if>
            <equals arg1="${version}" arg2="dev" />
            <then>
                <gitlog
                        repository="${dirs.root}"
                        format="tformat:%h"
                        maxCount="1"
                        outputProperty="gitHash"
                />
                <!-- The git log output contains a newline. We need to trim it. -->
                <php function="trim" returnProperty="version">
                    <param value="rev${gitHash}" />
                </php>
            </then>
        </if>
    </target>

    <!--
	====================================================================================================
	Tasks - Joomla! packages
	====================================================================================================
	-->

    <!--
    Builds the installable ZIP package which will be distributed to the users
    -->
    <target name="build-pkg" description="Builds the Joomla package file"
            depends="build-plugins">

        <copy file="${dirs.root}/pkg_facebooklogin.xml" tofile="${dirs.release}/pkg_facebooklogin.xml" overwrite="true">
            <filterchain>
                <replacetokens begintoken="##" endtoken="##">
                    <token key="DATE" value="${build.date}" />
                    <token key="VERSION" value="${version}" />
                </replacetokens>
            </filterchain>
        </copy>

        <copy file="${dirs.root}/CHANGELOG" tofile="${dirs.release}/CHANGELOG" overwrite="true" />
        <copy file="${dirs.root}/LICENSE" tofile="${dirs.release}/LICENSE.txt" overwrite="true" />

        <!-- Create the pkg archive -->
        <zip destfile="${dirs.release}/pkg_facebookauth-${version}.zip"
             includeemptydirs="true"
             comment="Facebook Login plugins v.${version}"
        >
            <fileset dir="${dirs.release}">
                <include name="pkg_*.xml" />
                <include name="CHANGELOG" />
                <include name="LICENSE.txt" />
                <include name="plg_*.zip" />
                <include name="mod_*.zip" />
            </fileset>
        </zip>

        <delete failonerror="false" quiet="true">
            <fileset dir="${dirs.release}">
                <include name="*" />
                <exclude name="pkg_*.zip" />
            </fileset>
        </delete>
    </target>

    <!--
	Builds all the plugins found in the plugins/* folders of the repository
	-->
    <target name="build-plugins" description="Build all plugins" depends="new-release,setup-properties">
        <foreach param="dirname" absparam="absname" target="build-plugin-folder">
            <fileset dir="${dirs.plugins}">
                <type type="dir" />
                <depth max="0" min="0" />
            </fileset>
        </foreach>
    </target>

    <!--
    Internal builder task to process all plugins inside a plugin folder in the repository, e.g. plugins/user
    -->
    <target name="build-plugin-folder" description="Iterate over the plugins in an area (authentication, user, ...) directory">
        <property name="plugin_area" value="${dirname}" />

        <foreach param="plugin_name" absparam="plugin_dir" target="build-plugin-item">
            <fileset dir="${absname}">
                <type type="dir" />
                <depth max="0" min="0" />
            </fileset>
        </foreach>
    </target>

    <!--
    Internal builder task to create the installable ZIP package of a single plugin
    -->
    <target name="build-plugin-item" description="Builds a plugin's installable ZIP package">
        <tempfile property="temp.file" destdir="${dirs.root}" />
        <copy file="${dirs.plugins}/${plugin_area}/${plugin_name}/${plugin_name}.xml" tofile="${temp.file}" overwrite="true">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="&lt;version&gt;.*&lt;/version&gt;" replace="&lt;version&gt;${version}&lt;/version&gt;" />
                    <regexp pattern="&lt;creationDate&gt;.*&lt;/creationDate&gt;" replace="&lt;creationDate&gt;${build.date}&lt;/creationDate&gt;" />
                </replaceregexp>
            </filterchain>
        </copy>
        <move file="${temp.file}" tofile="${dirs.plugins}/${plugin_area}/${plugin_name}/${plugin_name}.xml" overwrite="true" />

        <!-- Create the two factor plugin package -->
        <zip
                destfile="${dirs.release}/plg_${plugin_area}_${plugin_name}.zip"
                includeemptydirs="true">
            <fileset dir="${dirs.plugins}/${plugin_area}/${plugin_name}">
                <include name="**" />
            </fileset>
        </zip>
    </target>

</project>